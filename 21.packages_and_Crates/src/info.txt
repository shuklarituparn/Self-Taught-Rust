After we run the command "cargo new my-project"



After we run cargo new, we use ls to see what Cargo creates. In the project directory, there’s a
Cargo.toml file, giving us a package. There’s also a src directory that contains main.rs.
Open Cargo.toml in your text editor, and note there’s no mention of src/main.rs.
Cargo follows a convention that src/main.rs is the crate root of a binary crate with the same name as
the package. Likewise, Cargo knows that if the package directory contains src/lib.rs, the package contains
 a library crate with the same name as the package, and src/lib.rs is its crate root.
Cargo passes the crate root files to rustc to build the library or binary.

Here, we have a package that only contains src/main.rs, meaning it only contains a binary crate named
my-project.
If a package contains src/main.rs and src/lib.rs, it has two crates: a binary and a library, both with
the same name as the package. A package can have multiple binary crates by placing files in the
src/bin directory: each file will be a separate binary crate.